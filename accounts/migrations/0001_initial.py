# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-11-05 12:32
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(help_text='Um nome curto que será usado para identificá-lo de forma única na plataforma', max_length=30, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[\\w.@+-]+$', 32), 'Informe um nome de usuário válido. Este valor deve conter apenas letras, números e os caracteres: @/./+/-/_ .', 'invalid')], verbose_name='Apelido / Usuário')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Equipe')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Data de entrada')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(upload_to='documents_profiles/', verbose_name='Foto do documento')),
                ('selfie_document', models.ImageField(upload_to='selfies_documents/', verbose_name='Selfie com o documento')),
                ('status', models.BooleanField(choices=[(True, 'Verificado'), (False, 'NÃ£o verificado')], default=False, verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Apelido')),
                ('first_name', models.CharField(blank=True, max_length=250, verbose_name='Primeiro Nome')),
                ('last_name', models.CharField(blank=True, max_length=250, verbose_name='Sobrenome')),
                ('avatar', models.ImageField(upload_to='profile_avatar/', verbose_name='Avatar')),
                ('skin', models.ImageField(blank=True, upload_to='profile_skin/', verbose_name='Skin')),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='Bio')),
                ('location', models.CharField(blank=True, max_length=30, verbose_name='Localização')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('gender', models.CharField(blank=True, choices=[('Masculino', 'Masculino'), ('Feminino', 'Feminino'), ('Outros', 'Outros')], max_length=100, null=True, verbose_name='Eu sou')),
                ('cpf', models.CharField(blank=True, max_length=20, null=True, verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=20, null=True, verbose_name='RG')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone')),
                ('whatsapp', models.CharField(blank=True, max_length=20, null=True, verbose_name='Whatsapp')),
                ('telegram', models.CharField(blank=True, max_length=2, null=True, verbose_name='Telegram')),
                ('facebook', models.CharField(blank=True, max_length=500, null=True, verbose_name='Link do seu perfil ou página')),
                ('zipcode', models.CharField(blank=True, max_length=10, null=True, verbose_name='CEP')),
                ('country', models.CharField(blank=True, default='Brasil', max_length=20, null=True, verbose_name='País')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='Estado')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cidade')),
                ('address', models.CharField(blank=True, max_length=500, null=True, verbose_name='Endereço')),
                ('address_number', models.CharField(blank=True, max_length=10, null=True, verbose_name='Número')),
                ('address_remark', models.CharField(blank=True, max_length=500, null=True, verbose_name='Complemento')),
                ('townhouse', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bairro')),
                ('provider', models.BooleanField(choices=[(True, 'Sou prestador de serviÃ§os'), (False, 'NÃ£o presto serviÃ§os')], default=False, verbose_name='Prestador de serviço?')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil',
                'verbose_name_plural': 'Perfis',
            },
        ),
        migrations.AddField(
            model_name='document',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Profile'),
        ),
    ]
