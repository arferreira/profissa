# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-11-05 12:32
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, verbose_name='Descrição da conta')),
                ('bank', models.CharField(choices=[('001', 'Banco do Brasil'), ('033', 'Santander'), ('399', 'HSBC'), ('341', 'Itaú'), ('237', 'Bradesco'), ('104', 'Caixa Econômica Federal')], max_length=10, verbose_name='Banco')),
                ('agency', models.CharField(max_length=20, verbose_name='Agência')),
                ('number_account', models.CharField(max_length=20, verbose_name='Número da conta')),
            ],
            options={
                'verbose_name': 'Conta Bancária',
                'verbose_name_plural': 'Contas Bancárias',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Descrição')),
                ('slug', models.SlugField(max_length=100, verbose_name='Atalho')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='business.Category')),
            ],
            options={
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Razão Social/Nome')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('alias', models.CharField(blank=True, max_length=255, verbose_name='Apelido ou Nome de Fantasia')),
                ('cpf_cnpj', models.CharField(blank=True, max_length=255, verbose_name='CNPJ ou CPF')),
                ('ie_rg', models.CharField(blank=True, max_length=255, verbose_name='Inscrição Estadual ou RG')),
                ('im', models.CharField(blank=True, max_length=255, verbose_name='Inscrição Municipal')),
                ('phone_secondary', models.CharField(blank=True, max_length=20, verbose_name='Telefone Secundário')),
                ('site', models.CharField(blank=True, max_length=500, null=True, verbose_name='Site')),
                ('zipcode', models.CharField(blank=True, max_length=10, null=True, verbose_name='CEP')),
                ('country', models.CharField(blank=True, default='Brasil', max_length=20, null=True, verbose_name='País')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='Estado')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cidade')),
                ('address', models.CharField(blank=True, max_length=500, null=True, verbose_name='Endereço')),
                ('address_number', models.CharField(blank=True, max_length=10, null=True, verbose_name='Número')),
                ('address_remark', models.CharField(blank=True, max_length=500, null=True, verbose_name='Complemento')),
                ('townhouse', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bairro')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Profile')),
            ],
            options={
                'verbose_name': 'Cliente/Fornecedor',
                'verbose_name_plural': 'Clientes/Fornecedores',
            },
        ),
        migrations.CreateModel(
            name='Expenses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(default=uuid.uuid4, max_length=20, null=True, unique=True, verbose_name='Número')),
                ('description', models.CharField(max_length=255, verbose_name='Descrição')),
                ('value', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Valor financeiro')),
                ('expiration_data', models.DateTimeField(blank=True, verbose_name='Data de vencimento')),
                ('situation', models.IntegerField(choices=[(1, 'Em aberto'), (2, 'Liquidado'), (3, 'Cancelado')], default=1, verbose_name='Situação')),
                ('attachment', models.ImageField(blank=True, upload_to='attachment_receipts/', verbose_name='Anexo')),
                ('bank_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='business.BankAccount', verbose_name='Conta Bancária')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='business.Category', verbose_name='Categoria')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='business.Client')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Profile')),
            ],
            options={
                'verbose_name': 'Despesa',
                'verbose_name_plural': 'Despesas',
            },
        ),
        migrations.CreateModel(
            name='OrderService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(default=uuid.uuid4, max_length=20, null=True, unique=True, verbose_name='Número')),
                ('emission_date', models.DateTimeField(verbose_name='Data de emissão')),
                ('obs', models.CharField(blank=True, max_length=500, verbose_name='Observação')),
                ('total', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Valor total')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='business.Client', verbose_name='Pessoa')),
            ],
            options={
                'verbose_name': 'Ordem de serviço',
                'verbose_name_plural': 'Ordens de serviços',
            },
        ),
        migrations.CreateModel(
            name='Receipts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(default=uuid.uuid4, max_length=20, null=True, unique=True, verbose_name='Número')),
                ('description', models.CharField(max_length=255, verbose_name='Descrição')),
                ('value', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Valor financeiro')),
                ('expiration_data', models.DateTimeField(blank=True, verbose_name='Data de vencimento')),
                ('situation', models.IntegerField(choices=[(1, 'Em aberto'), (2, 'Liquidado'), (3, 'Cancelado')], default=1, verbose_name='Situação')),
                ('attachment', models.ImageField(blank=True, upload_to='attachment_receipts/', verbose_name='Anexo')),
                ('bank_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='business.BankAccount', verbose_name='Conta Bancária')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='business.Category', verbose_name='Categoria')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='business.Client')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Profile')),
            ],
            options={
                'verbose_name': 'Recebimento',
                'verbose_name_plural': 'Recebimentos',
            },
        ),
        migrations.CreateModel(
            name='TypeService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255, verbose_name='Descrição')),
                ('unit', models.CharField(blank=True, max_length=20, verbose_name='Unidade de medida')),
                ('unit_value', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Valor unitário')),
                ('municipal_code', models.CharField(blank=True, max_length=100, verbose_name='Código municipal')),
                ('code_law_complement', models.CharField(blank=True, max_length=255, verbose_name='Código da lei complementar')),
                ('percent_tributes', models.IntegerField(blank=True, default=0, verbose_name='Percentual detributos')),
                ('iss_tributes', models.IntegerField(blank=True, default=0, verbose_name='Percentual do ISS')),
            ],
            options={
                'verbose_name': 'Tipo de serviço',
                'verbose_name_plural': 'Tipos de serviços',
            },
        ),
        migrations.AddField(
            model_name='orderservice',
            name='services',
            field=models.ManyToManyField(to='business.TypeService', verbose_name='Itens'),
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together=set([('parent', 'slug')]),
        ),
    ]
